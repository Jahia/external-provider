<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2002-2022 Jahia Solutions Group SA. All rights reserved.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jahia.modules</groupId>
        <artifactId>external-provider-parent</artifactId>
        <version>4.7.0-SNAPSHOT</version>
    </parent>
    <artifactId>external-provider-ui</artifactId>
    <packaging>bundle</packaging>
    <name>Jahia External Provider UI</name>
    <description>This module provide an API that allows mounting of external content provider (as is it comes with vfs
        provider).
    </description>
    <scm>
        <connection>scm:git:git@github.com:Jahia/external-provider.git</connection>
        <developerConnection>scm:git:git@github.com:Jahia/external-provider.git</developerConnection>
        <url>scm:git:git@github.com:Jahia/external-provider.git</url>
        <tag>HEAD</tag>
    </scm>
    <properties>
        <jahia-depends>external-provider,siteSettings,assets,jquery</jahia-depends>
        <jahia-module-type>system</jahia-module-type>
        <jahia-deploy-on-site>system</jahia-deploy-on-site>
        <jahia-static-resources>/css,/javascript</jahia-static-resources>
        <export-package>
            org.jahia.modules.external.admin.mount,
            org.jahia.modules.external.admin.mount.validator
        </export-package>
        <jahia.modules.importPackage>
            org.jahia.modules.external,
            org.jahia.defaults.config.spring,
            org.jahia.exceptions,
            org.jahia.services,
            javassist.util.proxy
        </jahia.modules.importPackage>
        <jahia-module-signature>MCwCFAHYzvmVTgMoukrVhA5vwr8bsBdNAhQVZCHXRuTiNbKZHtiWluhP5LpsZQ==</jahia-module-signature>        <require-capability>osgi.extender;filter:="(osgi.extender=org.jahia.bundles.blueprint.extender.config)"</require-capability>
        <yarn.arguments>build:production</yarn.arguments>
        <sonar.sources>src/javascript,src/main/resources/javascript</sonar.sources>
    </properties>
    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>jahia-public</id>
            <name>Jahia Public Repository</name>
            <url>https://devtools.jahia.com/nexus/content/groups/public</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <yarn.arguments>build</yarn.arguments>
                <cyclonedx.skip>true</cyclonedx.skip>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.jahia.modules</groupId>
            <artifactId>external-provider</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/resources/javascript/apps</directory>
                            <includes>
                                <include>*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.8.0</version>
                <executions>
                    <execution>
                        <id>npm install node and yarn</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v18.16.0</nodeVersion>
                            <yarnVersion>v1.22.19</yarnVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>yarn install</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>yarn post-install</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>${yarn.arguments}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>sync-pom</id>
                        <phase>none</phase>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>sync-pom</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-scm-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-json</id>
                        <phase>none</phase>
                        <goals>
                            <goal>checkin</goal>
                        </goals>
                        <configuration>
                            <includes>package.json</includes>
                            <message>[maven-scm-plugin] [skip ci] synchronize package.json</message>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <preparationGoals>clean verify frontend:yarn@sync-pom scm:checkin@package-json</preparationGoals>
                    <completionGoals>frontend:yarn@sync-pom scm:checkin@package-json</completionGoals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>2.7.9</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>makeAggregateBom</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <projectType>library</projectType>
                    <schemaVersion>1.4</schemaVersion>
                    <includeBomSerialNumber>true</includeBomSerialNumber>
                    <includeCompileScope>true</includeCompileScope>
                    <includeProvidedScope>false</includeProvidedScope>
                    <includeRuntimeScope>true</includeRuntimeScope>
                    <includeSystemScope>false</includeSystemScope>
                    <includeTestScope>false</includeTestScope>
                    <includeLicenseText>false</includeLicenseText>
                    <outputReactorProjects>true</outputReactorProjects>
                    <outputFormat>json</outputFormat>
                    <outputName>java-bom.cdx</outputName>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
